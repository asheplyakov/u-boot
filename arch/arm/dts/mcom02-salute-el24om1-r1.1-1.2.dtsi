/*
 * Copyright 2017 RnD Center "ELVEES", JSC
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <dt-bindings/interrupt-controller/irq.h>

#define TDA998x_SPDIF	1
#define TDA998x_I2S	2

/ {
	chosen {
		bootargs = "console=ttyS0,115200";
	};

	aliases {
		spi0 = &spi0;
	};

	clocks {
		can_clk: can_clk {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <16000000>;
		};
	};

	leds {
		dbgled2 {
			label = "salute:green:dbgled2";
			gpios = <&gpioa 15 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "mmc1";
		};

		dbgled3 {
			label = "salute:green:dbgled3";
			gpios = <&gpiod 12 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		dbgled4 {
			label = "salute:green:dbgled4";
			gpios = <&gpiod 11 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		dbgled5 {
			label = "salute:green:dbgled5";
			gpios = <&gpiod 8 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		userled {
			label = "salute:green:userled";
			gpios = <&gpiod 27 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
		};
	};

	regulators {
		can_xceiver_reg: regulator@1 {
			compatible = "regulator-fixed";
			reg = <0x1>;
			regulator-name = "can-xceiver";
			gpio = <&gpiod 21 0>;
		};
	};

	sound_hdmi: sound-hdmi {
		compatible = "simple-audio-card";
		simple-audio-card,name = "Salute-EL24OM1-HDMI";
		simple-audio-card,format = "i2s";
		simple-audio-card,bitclock-master = <&dailink1_master>;
		simple-audio-card,frame-master = <&dailink1_master>;
		status = "disabled";

		dailink1_master: simple-audio-card,cpu {
			sound-dai = <&i2s>;
		};

		simple-audio-card,codec {
			sound-dai = <&tda19988>;
		};
	};
};

&ethernet {
	status = "okay";
};

&i2c0 {
	tda19988: hdmi-encoder@70 {
		compatible = "nxp,tda998x";
		reg = <0x70>;
		interrupt-parent = <&gpioa>;
		interrupts = <11 GPIO_ACTIVE_HIGH>;
		video-ports = <0x234501>;
		#sound-dai-cells = <0>;
		audio-ports = <TDA998x_I2S 0x3>;
		status = "disabled";
	};
};

&i2c2 {
	mcp7940x: rtc@6f {
		compatible = "microchip,mcp7940x";
		reg = <0x6f>;
	};

	si514: clock-generator@55 {
		reg = <0x55>;
		#clock-cells = <0>;
		compatible = "silabs,si514";
	};

	camera@30 {
		compatible = "ovti,ov2640";
		reg = <0x30>;
		port {
			ov2640_endpoint: endpoint {
				remote = <&vinc_endpoint2>;
			};
		};
	};

	camera@36 {
		compatible = "ovti,ov5647";
		reg = <0x36>;
		port {
			ov5647_1_endpoint: endpoint {
				remote = <&vinc_endpoint1>;
			};
		};
	};
};

&i2c1 {
	camera@36 {
		compatible = "ovti,ov5647";
		reg = <0x36>;
		port {
			ov5647_0_endpoint: endpoint {
				remote = <&vinc_endpoint0>;
			};
		};
	};
};

&i2s {
	clocks = <&i2s_pclk>, <&si514 0>;
	clock-names = "pclk", "i2sclk";
};

&sd1 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	ap6212: wifi@1 {
		compatible = "brcm,bcm4329-fmac";
		reg = <1>;
		reg-on-gpio = <&gpioc 23 GPIO_ACTIVE_HIGH>;
		status = "disabled";
	};
};

&sound {
	status = "okay";
};

&spi0 {
	num-cs = <2>;
	/* Third argument of "cs-gpios" property is set to 0,
	 * because it is ignored by the SPI driver. */
	cs-gpios = <&gpiod 18 0>, <&gpiod 19 0>;

	can: can@1 {
		compatible = "microchip,mcp2515";
		reg = <0x1>;
		spi-max-frequency = <10000000>;
		clocks = <&can_clk>;
		interrupt-parent = <&gpioa>;
		interrupts = <31 GPIO_ACTIVE_HIGH>;
		xceiver-supply = <&can_xceiver_reg>;
	};
};

/* Bluetooth is connected to UART1 */
&uart1 {
	status = "okay";

	bt {
		compatible = "brcm,bcm43438-bt";
		wake-gpio = <&gpioc 24 GPIO_ACTIVE_HIGH>;
		reset-gpio = <&gpioc 22 GPIO_ACTIVE_LOW>;
	};
};

&uart2 {
	status = "okay";
};

/* RS-485 is used as physical layer for UART3 */
&uart3 {
	status = "okay";
};

&vinc {
	status = "okay";
	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0x0>;

			vinc_endpoint0: endpoint@0 {
				reg = <0x0>;
				remote-endpoint = <&ov5647_0_endpoint>;
				elvees,ifacenum = /bits/ 8 <2>;
			};
		};

		port@1 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0x1>;

			vinc_endpoint1: endpoint@0 {
				reg = <0x0>;
				remote-endpoint = <&ov5647_1_endpoint>;
				elvees,ifacenum = /bits/ 8 <3>;
			};
		};

		port@2 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0x2>;

			vinc_endpoint2: endpoint@0 {
				reg = <0x0>;
				remote-endpoint = <&ov2640_endpoint>;
				elvees,pport-low-bits;
				elvees,ifacenum = /bits/ 8 <0>;
			};
		};
	};
};
